import {
  __commonJS,
  __toESM,
  require_react
} from "./chunk-OMFGQDFA.js";

// node_modules/prop-types/node_modules/react-is/cjs/react-is.development.js
var require_react_is_development = __commonJS({
  "node_modules/prop-types/node_modules/react-is/cjs/react-is.development.js"(exports) {
    "use strict";
    if (true) {
      (function() {
        "use strict";
        var hasSymbol = typeof Symbol === "function" && Symbol.for;
        var REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for("react.element") : 60103;
        var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for("react.portal") : 60106;
        var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for("react.fragment") : 60107;
        var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for("react.strict_mode") : 60108;
        var REACT_PROFILER_TYPE = hasSymbol ? Symbol.for("react.profiler") : 60114;
        var REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for("react.provider") : 60109;
        var REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for("react.context") : 60110;
        var REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for("react.async_mode") : 60111;
        var REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for("react.concurrent_mode") : 60111;
        var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for("react.forward_ref") : 60112;
        var REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for("react.suspense") : 60113;
        var REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for("react.suspense_list") : 60120;
        var REACT_MEMO_TYPE = hasSymbol ? Symbol.for("react.memo") : 60115;
        var REACT_LAZY_TYPE = hasSymbol ? Symbol.for("react.lazy") : 60116;
        var REACT_BLOCK_TYPE = hasSymbol ? Symbol.for("react.block") : 60121;
        var REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for("react.fundamental") : 60117;
        var REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for("react.responder") : 60118;
        var REACT_SCOPE_TYPE = hasSymbol ? Symbol.for("react.scope") : 60119;
        function isValidElementType(type) {
          return typeof type === "string" || typeof type === "function" || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
          type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === "object" && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);
        }
        function typeOf(object) {
          if (typeof object === "object" && object !== null) {
            var $$typeof = object.$$typeof;
            switch ($$typeof) {
              case REACT_ELEMENT_TYPE:
                var type = object.type;
                switch (type) {
                  case REACT_ASYNC_MODE_TYPE:
                  case REACT_CONCURRENT_MODE_TYPE:
                  case REACT_FRAGMENT_TYPE:
                  case REACT_PROFILER_TYPE:
                  case REACT_STRICT_MODE_TYPE:
                  case REACT_SUSPENSE_TYPE:
                    return type;
                  default:
                    var $$typeofType = type && type.$$typeof;
                    switch ($$typeofType) {
                      case REACT_CONTEXT_TYPE:
                      case REACT_FORWARD_REF_TYPE:
                      case REACT_LAZY_TYPE:
                      case REACT_MEMO_TYPE:
                      case REACT_PROVIDER_TYPE:
                        return $$typeofType;
                      default:
                        return $$typeof;
                    }
                }
              case REACT_PORTAL_TYPE:
                return $$typeof;
            }
          }
          return void 0;
        }
        var AsyncMode = REACT_ASYNC_MODE_TYPE;
        var ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;
        var ContextConsumer = REACT_CONTEXT_TYPE;
        var ContextProvider = REACT_PROVIDER_TYPE;
        var Element2 = REACT_ELEMENT_TYPE;
        var ForwardRef = REACT_FORWARD_REF_TYPE;
        var Fragment = REACT_FRAGMENT_TYPE;
        var Lazy = REACT_LAZY_TYPE;
        var Memo = REACT_MEMO_TYPE;
        var Portal = REACT_PORTAL_TYPE;
        var Profiler = REACT_PROFILER_TYPE;
        var StrictMode = REACT_STRICT_MODE_TYPE;
        var Suspense = REACT_SUSPENSE_TYPE;
        var hasWarnedAboutDeprecatedIsAsyncMode = false;
        function isAsyncMode(object) {
          {
            if (!hasWarnedAboutDeprecatedIsAsyncMode) {
              hasWarnedAboutDeprecatedIsAsyncMode = true;
              console["warn"]("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 17+. Update your code to use ReactIs.isConcurrentMode() instead. It has the exact same API.");
            }
          }
          return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;
        }
        function isConcurrentMode(object) {
          return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;
        }
        function isContextConsumer(object) {
          return typeOf(object) === REACT_CONTEXT_TYPE;
        }
        function isContextProvider(object) {
          return typeOf(object) === REACT_PROVIDER_TYPE;
        }
        function isElement(object) {
          return typeof object === "object" && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
        }
        function isForwardRef(object) {
          return typeOf(object) === REACT_FORWARD_REF_TYPE;
        }
        function isFragment(object) {
          return typeOf(object) === REACT_FRAGMENT_TYPE;
        }
        function isLazy(object) {
          return typeOf(object) === REACT_LAZY_TYPE;
        }
        function isMemo(object) {
          return typeOf(object) === REACT_MEMO_TYPE;
        }
        function isPortal(object) {
          return typeOf(object) === REACT_PORTAL_TYPE;
        }
        function isProfiler(object) {
          return typeOf(object) === REACT_PROFILER_TYPE;
        }
        function isStrictMode(object) {
          return typeOf(object) === REACT_STRICT_MODE_TYPE;
        }
        function isSuspense(object) {
          return typeOf(object) === REACT_SUSPENSE_TYPE;
        }
        exports.AsyncMode = AsyncMode;
        exports.ConcurrentMode = ConcurrentMode;
        exports.ContextConsumer = ContextConsumer;
        exports.ContextProvider = ContextProvider;
        exports.Element = Element2;
        exports.ForwardRef = ForwardRef;
        exports.Fragment = Fragment;
        exports.Lazy = Lazy;
        exports.Memo = Memo;
        exports.Portal = Portal;
        exports.Profiler = Profiler;
        exports.StrictMode = StrictMode;
        exports.Suspense = Suspense;
        exports.isAsyncMode = isAsyncMode;
        exports.isConcurrentMode = isConcurrentMode;
        exports.isContextConsumer = isContextConsumer;
        exports.isContextProvider = isContextProvider;
        exports.isElement = isElement;
        exports.isForwardRef = isForwardRef;
        exports.isFragment = isFragment;
        exports.isLazy = isLazy;
        exports.isMemo = isMemo;
        exports.isPortal = isPortal;
        exports.isProfiler = isProfiler;
        exports.isStrictMode = isStrictMode;
        exports.isSuspense = isSuspense;
        exports.isValidElementType = isValidElementType;
        exports.typeOf = typeOf;
      })();
    }
  }
});

// node_modules/prop-types/node_modules/react-is/index.js
var require_react_is = __commonJS({
  "node_modules/prop-types/node_modules/react-is/index.js"(exports, module) {
    "use strict";
    if (false) {
      module.exports = null;
    } else {
      module.exports = require_react_is_development();
    }
  }
});

// node_modules/object-assign/index.js
var require_object_assign = __commonJS({
  "node_modules/object-assign/index.js"(exports, module) {
    "use strict";
    var getOwnPropertySymbols = Object.getOwnPropertySymbols;
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    var propIsEnumerable = Object.prototype.propertyIsEnumerable;
    function toObject(val) {
      if (val === null || val === void 0) {
        throw new TypeError("Object.assign cannot be called with null or undefined");
      }
      return Object(val);
    }
    function shouldUseNative() {
      try {
        if (!Object.assign) {
          return false;
        }
        var test1 = new String("abc");
        test1[5] = "de";
        if (Object.getOwnPropertyNames(test1)[0] === "5") {
          return false;
        }
        var test2 = {};
        for (var i = 0; i < 10; i++) {
          test2["_" + String.fromCharCode(i)] = i;
        }
        var order2 = Object.getOwnPropertyNames(test2).map(function(n) {
          return test2[n];
        });
        if (order2.join("") !== "0123456789") {
          return false;
        }
        var test3 = {};
        "abcdefghijklmnopqrst".split("").forEach(function(letter) {
          test3[letter] = letter;
        });
        if (Object.keys(Object.assign({}, test3)).join("") !== "abcdefghijklmnopqrst") {
          return false;
        }
        return true;
      } catch (err) {
        return false;
      }
    }
    module.exports = shouldUseNative() ? Object.assign : function(target, source) {
      var from;
      var to = toObject(target);
      var symbols;
      for (var s = 1; s < arguments.length; s++) {
        from = Object(arguments[s]);
        for (var key in from) {
          if (hasOwnProperty.call(from, key)) {
            to[key] = from[key];
          }
        }
        if (getOwnPropertySymbols) {
          symbols = getOwnPropertySymbols(from);
          for (var i = 0; i < symbols.length; i++) {
            if (propIsEnumerable.call(from, symbols[i])) {
              to[symbols[i]] = from[symbols[i]];
            }
          }
        }
      }
      return to;
    };
  }
});

// node_modules/prop-types/lib/ReactPropTypesSecret.js
var require_ReactPropTypesSecret = __commonJS({
  "node_modules/prop-types/lib/ReactPropTypesSecret.js"(exports, module) {
    "use strict";
    var ReactPropTypesSecret = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";
    module.exports = ReactPropTypesSecret;
  }
});

// node_modules/prop-types/lib/has.js
var require_has = __commonJS({
  "node_modules/prop-types/lib/has.js"(exports, module) {
    module.exports = Function.call.bind(Object.prototype.hasOwnProperty);
  }
});

// node_modules/prop-types/checkPropTypes.js
var require_checkPropTypes = __commonJS({
  "node_modules/prop-types/checkPropTypes.js"(exports, module) {
    "use strict";
    var printWarning = function() {
    };
    if (true) {
      ReactPropTypesSecret = require_ReactPropTypesSecret();
      loggedTypeFailures = {};
      has = require_has();
      printWarning = function(text) {
        var message = "Warning: " + text;
        if (typeof console !== "undefined") {
          console.error(message);
        }
        try {
          throw new Error(message);
        } catch (x) {
        }
      };
    }
    var ReactPropTypesSecret;
    var loggedTypeFailures;
    var has;
    function checkPropTypes(typeSpecs, values, location, componentName, getStack) {
      if (true) {
        for (var typeSpecName in typeSpecs) {
          if (has(typeSpecs, typeSpecName)) {
            var error;
            try {
              if (typeof typeSpecs[typeSpecName] !== "function") {
                var err = Error(
                  (componentName || "React class") + ": " + location + " type `" + typeSpecName + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof typeSpecs[typeSpecName] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`."
                );
                err.name = "Invariant Violation";
                throw err;
              }
              error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
            } catch (ex) {
              error = ex;
            }
            if (error && !(error instanceof Error)) {
              printWarning(
                (componentName || "React class") + ": type specification of " + location + " `" + typeSpecName + "` is invalid; the type checker function must return `null` or an `Error` but returned a " + typeof error + ". You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument)."
              );
            }
            if (error instanceof Error && !(error.message in loggedTypeFailures)) {
              loggedTypeFailures[error.message] = true;
              var stack = getStack ? getStack() : "";
              printWarning(
                "Failed " + location + " type: " + error.message + (stack != null ? stack : "")
              );
            }
          }
        }
      }
    }
    checkPropTypes.resetWarningCache = function() {
      if (true) {
        loggedTypeFailures = {};
      }
    };
    module.exports = checkPropTypes;
  }
});

// node_modules/prop-types/factoryWithTypeCheckers.js
var require_factoryWithTypeCheckers = __commonJS({
  "node_modules/prop-types/factoryWithTypeCheckers.js"(exports, module) {
    "use strict";
    var ReactIs = require_react_is();
    var assign = require_object_assign();
    var ReactPropTypesSecret = require_ReactPropTypesSecret();
    var has = require_has();
    var checkPropTypes = require_checkPropTypes();
    var printWarning = function() {
    };
    if (true) {
      printWarning = function(text) {
        var message = "Warning: " + text;
        if (typeof console !== "undefined") {
          console.error(message);
        }
        try {
          throw new Error(message);
        } catch (x) {
        }
      };
    }
    function emptyFunctionThatReturnsNull() {
      return null;
    }
    module.exports = function(isValidElement, throwOnDirectAccess) {
      var ITERATOR_SYMBOL = typeof Symbol === "function" && Symbol.iterator;
      var FAUX_ITERATOR_SYMBOL = "@@iterator";
      function getIteratorFn(maybeIterable) {
        var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
        if (typeof iteratorFn === "function") {
          return iteratorFn;
        }
      }
      var ANONYMOUS = "<<anonymous>>";
      var ReactPropTypes = {
        array: createPrimitiveTypeChecker("array"),
        bigint: createPrimitiveTypeChecker("bigint"),
        bool: createPrimitiveTypeChecker("boolean"),
        func: createPrimitiveTypeChecker("function"),
        number: createPrimitiveTypeChecker("number"),
        object: createPrimitiveTypeChecker("object"),
        string: createPrimitiveTypeChecker("string"),
        symbol: createPrimitiveTypeChecker("symbol"),
        any: createAnyTypeChecker(),
        arrayOf: createArrayOfTypeChecker,
        element: createElementTypeChecker(),
        elementType: createElementTypeTypeChecker(),
        instanceOf: createInstanceTypeChecker,
        node: createNodeChecker(),
        objectOf: createObjectOfTypeChecker,
        oneOf: createEnumTypeChecker,
        oneOfType: createUnionTypeChecker,
        shape: createShapeTypeChecker,
        exact: createStrictShapeTypeChecker
      };
      function is(x, y) {
        if (x === y) {
          return x !== 0 || 1 / x === 1 / y;
        } else {
          return x !== x && y !== y;
        }
      }
      function PropTypeError(message, data) {
        this.message = message;
        this.data = data && typeof data === "object" ? data : {};
        this.stack = "";
      }
      PropTypeError.prototype = Error.prototype;
      function createChainableTypeChecker(validate) {
        if (true) {
          var manualPropTypeCallCache = {};
          var manualPropTypeWarningCount = 0;
        }
        function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
          componentName = componentName || ANONYMOUS;
          propFullName = propFullName || propName;
          if (secret !== ReactPropTypesSecret) {
            if (throwOnDirectAccess) {
              var err = new Error(
                "Calling PropTypes validators directly is not supported by the `prop-types` package. Use `PropTypes.checkPropTypes()` to call them. Read more at http://fb.me/use-check-prop-types"
              );
              err.name = "Invariant Violation";
              throw err;
            } else if (typeof console !== "undefined") {
              var cacheKey = componentName + ":" + propName;
              if (!manualPropTypeCallCache[cacheKey] && // Avoid spamming the console because they are often not actionable except for lib authors
              manualPropTypeWarningCount < 3) {
                printWarning(
                  "You are manually calling a React.PropTypes validation function for the `" + propFullName + "` prop on `" + componentName + "`. This is deprecated and will throw in the standalone `prop-types` package. You may be seeing this warning due to a third-party PropTypes library. See https://fb.me/react-warning-dont-call-proptypes for details."
                );
                manualPropTypeCallCache[cacheKey] = true;
                manualPropTypeWarningCount++;
              }
            }
          }
          if (props[propName] == null) {
            if (isRequired) {
              if (props[propName] === null) {
                return new PropTypeError("The " + location + " `" + propFullName + "` is marked as required " + ("in `" + componentName + "`, but its value is `null`."));
              }
              return new PropTypeError("The " + location + " `" + propFullName + "` is marked as required in " + ("`" + componentName + "`, but its value is `undefined`."));
            }
            return null;
          } else {
            return validate(props, propName, componentName, location, propFullName);
          }
        }
        var chainedCheckType = checkType.bind(null, false);
        chainedCheckType.isRequired = checkType.bind(null, true);
        return chainedCheckType;
      }
      function createPrimitiveTypeChecker(expectedType) {
        function validate(props, propName, componentName, location, propFullName, secret) {
          var propValue = props[propName];
          var propType = getPropType(propValue);
          if (propType !== expectedType) {
            var preciseType = getPreciseType(propValue);
            return new PropTypeError(
              "Invalid " + location + " `" + propFullName + "` of type " + ("`" + preciseType + "` supplied to `" + componentName + "`, expected ") + ("`" + expectedType + "`."),
              { expectedType }
            );
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createAnyTypeChecker() {
        return createChainableTypeChecker(emptyFunctionThatReturnsNull);
      }
      function createArrayOfTypeChecker(typeChecker) {
        function validate(props, propName, componentName, location, propFullName) {
          if (typeof typeChecker !== "function") {
            return new PropTypeError("Property `" + propFullName + "` of component `" + componentName + "` has invalid PropType notation inside arrayOf.");
          }
          var propValue = props[propName];
          if (!Array.isArray(propValue)) {
            var propType = getPropType(propValue);
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected an array."));
          }
          for (var i = 0; i < propValue.length; i++) {
            var error = typeChecker(propValue, i, componentName, location, propFullName + "[" + i + "]", ReactPropTypesSecret);
            if (error instanceof Error) {
              return error;
            }
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createElementTypeChecker() {
        function validate(props, propName, componentName, location, propFullName) {
          var propValue = props[propName];
          if (!isValidElement(propValue)) {
            var propType = getPropType(propValue);
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected a single ReactElement."));
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createElementTypeTypeChecker() {
        function validate(props, propName, componentName, location, propFullName) {
          var propValue = props[propName];
          if (!ReactIs.isValidElementType(propValue)) {
            var propType = getPropType(propValue);
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected a single ReactElement type."));
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createInstanceTypeChecker(expectedClass) {
        function validate(props, propName, componentName, location, propFullName) {
          if (!(props[propName] instanceof expectedClass)) {
            var expectedClassName = expectedClass.name || ANONYMOUS;
            var actualClassName = getClassName(props[propName]);
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + actualClassName + "` supplied to `" + componentName + "`, expected ") + ("instance of `" + expectedClassName + "`."));
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createEnumTypeChecker(expectedValues) {
        if (!Array.isArray(expectedValues)) {
          if (true) {
            if (arguments.length > 1) {
              printWarning(
                "Invalid arguments supplied to oneOf, expected an array, got " + arguments.length + " arguments. A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z])."
              );
            } else {
              printWarning("Invalid argument supplied to oneOf, expected an array.");
            }
          }
          return emptyFunctionThatReturnsNull;
        }
        function validate(props, propName, componentName, location, propFullName) {
          var propValue = props[propName];
          for (var i = 0; i < expectedValues.length; i++) {
            if (is(propValue, expectedValues[i])) {
              return null;
            }
          }
          var valuesString = JSON.stringify(expectedValues, function replacer(key, value) {
            var type = getPreciseType(value);
            if (type === "symbol") {
              return String(value);
            }
            return value;
          });
          return new PropTypeError("Invalid " + location + " `" + propFullName + "` of value `" + String(propValue) + "` " + ("supplied to `" + componentName + "`, expected one of " + valuesString + "."));
        }
        return createChainableTypeChecker(validate);
      }
      function createObjectOfTypeChecker(typeChecker) {
        function validate(props, propName, componentName, location, propFullName) {
          if (typeof typeChecker !== "function") {
            return new PropTypeError("Property `" + propFullName + "` of component `" + componentName + "` has invalid PropType notation inside objectOf.");
          }
          var propValue = props[propName];
          var propType = getPropType(propValue);
          if (propType !== "object") {
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected an object."));
          }
          for (var key in propValue) {
            if (has(propValue, key)) {
              var error = typeChecker(propValue, key, componentName, location, propFullName + "." + key, ReactPropTypesSecret);
              if (error instanceof Error) {
                return error;
              }
            }
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createUnionTypeChecker(arrayOfTypeCheckers) {
        if (!Array.isArray(arrayOfTypeCheckers)) {
          true ? printWarning("Invalid argument supplied to oneOfType, expected an instance of array.") : void 0;
          return emptyFunctionThatReturnsNull;
        }
        for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
          var checker = arrayOfTypeCheckers[i];
          if (typeof checker !== "function") {
            printWarning(
              "Invalid argument supplied to oneOfType. Expected an array of check functions, but received " + getPostfixForTypeWarning(checker) + " at index " + i + "."
            );
            return emptyFunctionThatReturnsNull;
          }
        }
        function validate(props, propName, componentName, location, propFullName) {
          var expectedTypes = [];
          for (var i2 = 0; i2 < arrayOfTypeCheckers.length; i2++) {
            var checker2 = arrayOfTypeCheckers[i2];
            var checkerResult = checker2(props, propName, componentName, location, propFullName, ReactPropTypesSecret);
            if (checkerResult == null) {
              return null;
            }
            if (checkerResult.data && has(checkerResult.data, "expectedType")) {
              expectedTypes.push(checkerResult.data.expectedType);
            }
          }
          var expectedTypesMessage = expectedTypes.length > 0 ? ", expected one of type [" + expectedTypes.join(", ") + "]" : "";
          return new PropTypeError("Invalid " + location + " `" + propFullName + "` supplied to " + ("`" + componentName + "`" + expectedTypesMessage + "."));
        }
        return createChainableTypeChecker(validate);
      }
      function createNodeChecker() {
        function validate(props, propName, componentName, location, propFullName) {
          if (!isNode(props[propName])) {
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` supplied to " + ("`" + componentName + "`, expected a ReactNode."));
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function invalidValidatorError(componentName, location, propFullName, key, type) {
        return new PropTypeError(
          (componentName || "React class") + ": " + location + " type `" + propFullName + "." + key + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + type + "`."
        );
      }
      function createShapeTypeChecker(shapeTypes) {
        function validate(props, propName, componentName, location, propFullName) {
          var propValue = props[propName];
          var propType = getPropType(propValue);
          if (propType !== "object") {
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type `" + propType + "` " + ("supplied to `" + componentName + "`, expected `object`."));
          }
          for (var key in shapeTypes) {
            var checker = shapeTypes[key];
            if (typeof checker !== "function") {
              return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));
            }
            var error = checker(propValue, key, componentName, location, propFullName + "." + key, ReactPropTypesSecret);
            if (error) {
              return error;
            }
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createStrictShapeTypeChecker(shapeTypes) {
        function validate(props, propName, componentName, location, propFullName) {
          var propValue = props[propName];
          var propType = getPropType(propValue);
          if (propType !== "object") {
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type `" + propType + "` " + ("supplied to `" + componentName + "`, expected `object`."));
          }
          var allKeys = assign({}, props[propName], shapeTypes);
          for (var key in allKeys) {
            var checker = shapeTypes[key];
            if (has(shapeTypes, key) && typeof checker !== "function") {
              return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));
            }
            if (!checker) {
              return new PropTypeError(
                "Invalid " + location + " `" + propFullName + "` key `" + key + "` supplied to `" + componentName + "`.\nBad object: " + JSON.stringify(props[propName], null, "  ") + "\nValid keys: " + JSON.stringify(Object.keys(shapeTypes), null, "  ")
              );
            }
            var error = checker(propValue, key, componentName, location, propFullName + "." + key, ReactPropTypesSecret);
            if (error) {
              return error;
            }
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function isNode(propValue) {
        switch (typeof propValue) {
          case "number":
          case "string":
          case "undefined":
            return true;
          case "boolean":
            return !propValue;
          case "object":
            if (Array.isArray(propValue)) {
              return propValue.every(isNode);
            }
            if (propValue === null || isValidElement(propValue)) {
              return true;
            }
            var iteratorFn = getIteratorFn(propValue);
            if (iteratorFn) {
              var iterator = iteratorFn.call(propValue);
              var step;
              if (iteratorFn !== propValue.entries) {
                while (!(step = iterator.next()).done) {
                  if (!isNode(step.value)) {
                    return false;
                  }
                }
              } else {
                while (!(step = iterator.next()).done) {
                  var entry = step.value;
                  if (entry) {
                    if (!isNode(entry[1])) {
                      return false;
                    }
                  }
                }
              }
            } else {
              return false;
            }
            return true;
          default:
            return false;
        }
      }
      function isSymbol(propType, propValue) {
        if (propType === "symbol") {
          return true;
        }
        if (!propValue) {
          return false;
        }
        if (propValue["@@toStringTag"] === "Symbol") {
          return true;
        }
        if (typeof Symbol === "function" && propValue instanceof Symbol) {
          return true;
        }
        return false;
      }
      function getPropType(propValue) {
        var propType = typeof propValue;
        if (Array.isArray(propValue)) {
          return "array";
        }
        if (propValue instanceof RegExp) {
          return "object";
        }
        if (isSymbol(propType, propValue)) {
          return "symbol";
        }
        return propType;
      }
      function getPreciseType(propValue) {
        if (typeof propValue === "undefined" || propValue === null) {
          return "" + propValue;
        }
        var propType = getPropType(propValue);
        if (propType === "object") {
          if (propValue instanceof Date) {
            return "date";
          } else if (propValue instanceof RegExp) {
            return "regexp";
          }
        }
        return propType;
      }
      function getPostfixForTypeWarning(value) {
        var type = getPreciseType(value);
        switch (type) {
          case "array":
          case "object":
            return "an " + type;
          case "boolean":
          case "date":
          case "regexp":
            return "a " + type;
          default:
            return type;
        }
      }
      function getClassName(propValue) {
        if (!propValue.constructor || !propValue.constructor.name) {
          return ANONYMOUS;
        }
        return propValue.constructor.name;
      }
      ReactPropTypes.checkPropTypes = checkPropTypes;
      ReactPropTypes.resetWarningCache = checkPropTypes.resetWarningCache;
      ReactPropTypes.PropTypes = ReactPropTypes;
      return ReactPropTypes;
    };
  }
});

// node_modules/prop-types/index.js
var require_prop_types = __commonJS({
  "node_modules/prop-types/index.js"(exports, module) {
    if (true) {
      ReactIs = require_react_is();
      throwOnDirectAccess = true;
      module.exports = require_factoryWithTypeCheckers()(ReactIs.isElement, throwOnDirectAccess);
    } else {
      module.exports = null();
    }
    var ReactIs;
    var throwOnDirectAccess;
  }
});

// node_modules/react-responsive-pagination/lib/index.js
var import_react8 = __toESM(require_react());
var import_prop_types = __toESM(require_prop_types());

// node_modules/react-responsive-pagination/lib/hooks/usePaginationItems.js
var import_react7 = __toESM(require_react());

// node_modules/react-responsive-pagination/lib/compositionItem.js
function createActivePage(page) {
  return { type: "active", page };
}
function createPage(page) {
  return { type: "page", page };
}
function createNavPrevious(page) {
  return { type: "<", page };
}
function createNavNext(page) {
  return { type: ">", page };
}
function createEllipsis(ellipsisPos) {
  return { type: "…".concat(ellipsisPos), page: void 0 };
}
function isNav(item) {
  return item.type === "<" || item.type === ">";
}
function isEllipsis(item) {
  return item.type === "…L" || item.type === "…R";
}

// node_modules/react-responsive-pagination/lib/helpers/iterator.js
var __generator = function(thisArg, body) {
  var _ = { label: 0, sent: function() {
    if (t[0] & 1)
      throw t[1];
    return t[1];
  }, trys: [], ops: [] }, f, y, t, g;
  return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() {
    return this;
  }), g;
  function verb(n) {
    return function(v) {
      return step([n, v]);
    };
  }
  function step(op) {
    if (f)
      throw new TypeError("Generator is already executing.");
    while (g && (g = 0, op[0] && (_ = 0)), _)
      try {
        if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
          return t;
        if (y = 0, t)
          op = [op[0] & 2, t.value];
        switch (op[0]) {
          case 0:
          case 1:
            t = op;
            break;
          case 4:
            _.label++;
            return { value: op[1], done: false };
          case 5:
            _.label++;
            y = op[1];
            op = [0];
            continue;
          case 7:
            op = _.ops.pop();
            _.trys.pop();
            continue;
          default:
            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
              _ = 0;
              continue;
            }
            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
              _.label = op[1];
              break;
            }
            if (op[0] === 6 && _.label < t[1]) {
              _.label = t[1];
              t = op;
              break;
            }
            if (t && _.label < t[2]) {
              _.label = t[2];
              _.ops.push(op);
              break;
            }
            if (t[2])
              _.ops.pop();
            _.trys.pop();
            continue;
        }
        op = body.call(thisArg, _);
      } catch (e) {
        op = [6, e];
        y = 0;
      } finally {
        f = t = 0;
      }
    if (op[0] & 5)
      throw op[1];
    return { value: op[0] ? op[1] : void 0, done: true };
  }
};
var __values = function(o) {
  var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
  if (m)
    return m.call(o);
  if (o && typeof o.length === "number")
    return {
      next: function() {
        if (o && i >= o.length)
          o = void 0;
        return { value: o && o[i++], done: !o };
      }
    };
  throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
function zipIterators(xs, ys) {
  var xResult, yResult;
  return __generator(this, function(_a) {
    switch (_a.label) {
      case 0:
        if (false)
          return [3, 2];
        xResult = xs.next();
        yResult = ys.next();
        if (xResult.done && yResult.done)
          return [3, 2];
        return [4, [xResult.value, yResult.value]];
      case 1:
        _a.sent();
        return [3, 0];
      case 2:
        return [
          2
          /*return*/
        ];
    }
  });
}
function lastWhere(xs, predicate) {
  var e_1, _a;
  var lastSoFar;
  try {
    for (var xs_1 = __values(xs), xs_1_1 = xs_1.next(); !xs_1_1.done; xs_1_1 = xs_1.next()) {
      var x = xs_1_1.value;
      if (!predicate(x))
        break;
      lastSoFar = x;
    }
  } catch (e_1_1) {
    e_1 = { error: e_1_1 };
  } finally {
    try {
      if (xs_1_1 && !xs_1_1.done && (_a = xs_1.return))
        _a.call(xs_1);
    } finally {
      if (e_1)
        throw e_1.error;
    }
  }
  return lastSoFar;
}
function iteratorNext(xs) {
  var xResult = xs.next();
  return xResult.done ? void 0 : xResult.value;
}

// node_modules/react-responsive-pagination/lib/compositions/ranges.js
var __generator2 = function(thisArg, body) {
  var _ = { label: 0, sent: function() {
    if (t[0] & 1)
      throw t[1];
    return t[1];
  }, trys: [], ops: [] }, f, y, t, g;
  return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() {
    return this;
  }), g;
  function verb(n) {
    return function(v) {
      return step([n, v]);
    };
  }
  function step(op) {
    if (f)
      throw new TypeError("Generator is already executing.");
    while (g && (g = 0, op[0] && (_ = 0)), _)
      try {
        if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
          return t;
        if (y = 0, t)
          op = [op[0] & 2, t.value];
        switch (op[0]) {
          case 0:
          case 1:
            t = op;
            break;
          case 4:
            _.label++;
            return { value: op[1], done: false };
          case 5:
            _.label++;
            y = op[1];
            op = [0];
            continue;
          case 7:
            op = _.ops.pop();
            _.trys.pop();
            continue;
          default:
            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
              _ = 0;
              continue;
            }
            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
              _.label = op[1];
              break;
            }
            if (op[0] === 6 && _.label < t[1]) {
              _.label = t[1];
              t = op;
              break;
            }
            if (t && _.label < t[2]) {
              _.label = t[2];
              _.ops.push(op);
              break;
            }
            if (t[2])
              _.ops.pop();
            _.trys.pop();
            continue;
        }
        op = body.call(thisArg, _);
      } catch (e) {
        op = [6, e];
        y = 0;
      } finally {
        f = t = 0;
      }
    if (op[0] & 5)
      throw op[1];
    return { value: op[0] ? op[1] : void 0, done: true };
  }
};
var __values2 = function(o) {
  var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
  if (m)
    return m.call(o);
  if (o && typeof o.length === "number")
    return {
      next: function() {
        if (o && i >= o.length)
          o = void 0;
        return { value: o && o[i++], done: !o };
      }
    };
  throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
var __read = function(o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m)
    return o;
  var i = m.call(o), r, ar = [], e;
  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
      ar.push(r.value);
  } catch (error) {
    e = { error };
  } finally {
    try {
      if (r && !r.done && (m = i["return"]))
        m.call(i);
    } finally {
      if (e)
        throw e.error;
    }
  }
  return ar;
};
var __spreadArray = function(to, from, pack) {
  if (pack || arguments.length === 2)
    for (var i = 0, l = from.length, ar; i < l; i++) {
      if (ar || !(i in from)) {
        if (!ar)
          ar = Array.prototype.slice.call(from, 0, i);
        ar[i] = from[i];
      }
    }
  return to.concat(ar || Array.prototype.slice.call(from));
};
function narrowToWidePaginationItemRanges(start, end, collapsePos) {
  var _a, _b, range, e_1_1;
  var e_1, _c;
  return __generator2(this, function(_d) {
    switch (_d.label) {
      case 0:
        _d.trys.push([0, 5, 6, 7]);
        _a = __values2(narrowToWideNumberRanges(start, end, collapsePos)), _b = _a.next();
        _d.label = 1;
      case 1:
        if (!!_b.done)
          return [3, 4];
        range = _b.value;
        return [4, range.map(function(item) {
          return item === "…" ? createEllipsis(collapsePos) : createPage(item);
        })];
      case 2:
        _d.sent();
        _d.label = 3;
      case 3:
        _b = _a.next();
        return [3, 1];
      case 4:
        return [3, 7];
      case 5:
        e_1_1 = _d.sent();
        e_1 = { error: e_1_1 };
        return [3, 7];
      case 6:
        try {
          if (_b && !_b.done && (_c = _a.return))
            _c.call(_a);
        } finally {
          if (e_1)
            throw e_1.error;
        }
        return [
          7
          /*endfinally*/
        ];
      case 7:
        return [
          2
          /*return*/
        ];
    }
  });
}
function narrowToWideNumberRanges(first, last, collapsePos) {
  var fullWidth, iterationWidth, range;
  return __generator2(this, function(_a) {
    switch (_a.label) {
      case 0:
        fullWidth = last - first + 1;
        iterationWidth = 1;
        _a.label = 1;
      case 1:
        if (!(iterationWidth < fullWidth))
          return [3, 4];
        range = getCollapsedRange(first, last, iterationWidth, collapsePos);
        if (!range)
          return [3, 3];
        return [4, range];
      case 2:
        _a.sent();
        _a.label = 3;
      case 3:
        iterationWidth++;
        return [3, 1];
      case 4:
        return [4, getFullRange(first, last)];
      case 5:
        _a.sent();
        return [
          2
          /*return*/
        ];
    }
  });
}
function getCollapsedRange(first, last, requiredWidth, collapsePos) {
  if (requiredWidth < 3)
    return;
  var widthOfRange = requiredWidth - 2;
  return collapsePos === "L" ? __spreadArray([first, "…"], __read(getFullRange(last - (widthOfRange - 1), last)), false) : __spreadArray(__spreadArray([], __read(getFullRange(first, first + (widthOfRange - 1))), false), ["…", last], false);
}
function getFullRange(start, end) {
  if (end < start)
    return [];
  return Array.from(Array(end - start + 1).keys(), function(i) {
    return i + start;
  });
}

// node_modules/react-responsive-pagination/lib/compositions/index.js
var __generator3 = function(thisArg, body) {
  var _ = { label: 0, sent: function() {
    if (t[0] & 1)
      throw t[1];
    return t[1];
  }, trys: [], ops: [] }, f, y, t, g;
  return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() {
    return this;
  }), g;
  function verb(n) {
    return function(v) {
      return step([n, v]);
    };
  }
  function step(op) {
    if (f)
      throw new TypeError("Generator is already executing.");
    while (g && (g = 0, op[0] && (_ = 0)), _)
      try {
        if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
          return t;
        if (y = 0, t)
          op = [op[0] & 2, t.value];
        switch (op[0]) {
          case 0:
          case 1:
            t = op;
            break;
          case 4:
            _.label++;
            return { value: op[1], done: false };
          case 5:
            _.label++;
            y = op[1];
            op = [0];
            continue;
          case 7:
            op = _.ops.pop();
            _.trys.pop();
            continue;
          default:
            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
              _ = 0;
              continue;
            }
            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
              _.label = op[1];
              break;
            }
            if (op[0] === 6 && _.label < t[1]) {
              _.label = t[1];
              t = op;
              break;
            }
            if (t && _.label < t[2]) {
              _.label = t[2];
              _.ops.push(op);
              break;
            }
            if (t[2])
              _.ops.pop();
            _.trys.pop();
            continue;
        }
        op = body.call(thisArg, _);
      } catch (e) {
        op = [6, e];
        y = 0;
      } finally {
        f = t = 0;
      }
    if (op[0] & 5)
      throw op[1];
    return { value: op[0] ? op[1] : void 0, done: true };
  }
};
var __values3 = function(o) {
  var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
  if (m)
    return m.call(o);
  if (o && typeof o.length === "number")
    return {
      next: function() {
        if (o && i >= o.length)
          o = void 0;
        return { value: o && o[i++], done: !o };
      }
    };
  throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
var __read2 = function(o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m)
    return o;
  var i = m.call(o), r, ar = [], e;
  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
      ar.push(r.value);
  } catch (error) {
    e = { error };
  } finally {
    try {
      if (r && !r.done && (m = i["return"]))
        m.call(i);
    } finally {
      if (e)
        throw e.error;
    }
  }
  return ar;
};
var __spreadArray2 = function(to, from, pack) {
  if (pack || arguments.length === 2)
    for (var i = 0, l = from.length, ar; i < l; i++) {
      if (ar || !(i in from)) {
        if (!ar)
          ar = Array.prototype.slice.call(from, 0, i);
        ar[i] = from[i];
      }
    }
  return to.concat(ar || Array.prototype.slice.call(from));
};
function narrowToWideCompositions(_a) {
  var clampedCurrent, compositions, compositions_1, compositions_1_1, initialComposition, e_1_1;
  var e_1, _b;
  var current = _a.current, total = _a.total, narrowStrategies = _a.narrowStrategies, renderNav = _a.renderNav;
  return __generator3(this, function(_c) {
    switch (_c.label) {
      case 0:
        if (total < 1)
          return [
            2
            /*return*/
          ];
        clampedCurrent = Math.max(1, Math.min(current, total));
        compositions = narrowToWideCompositionsUnfiltered(clampedCurrent, total, renderNav);
        _c.label = 1;
      case 1:
        _c.trys.push([1, 9, 10, 11]);
        compositions_1 = __values3(compositions), compositions_1_1 = compositions_1.next();
        _c.label = 2;
      case 2:
        if (!!compositions_1_1.done)
          return [3, 8];
        initialComposition = compositions_1_1.value;
        if (!(narrowStrategies.length > 0))
          return [3, 4];
        return [5, __values3(initialReducedCompositions(initialComposition, narrowStrategies))];
      case 3:
        _c.sent();
        _c.label = 4;
      case 4:
        return [4, initialComposition];
      case 5:
        _c.sent();
        return [5, __values3(compositions)];
      case 6:
        _c.sent();
        _c.label = 7;
      case 7:
        compositions_1_1 = compositions_1.next();
        return [3, 2];
      case 8:
        return [3, 11];
      case 9:
        e_1_1 = _c.sent();
        e_1 = { error: e_1_1 };
        return [3, 11];
      case 10:
        try {
          if (compositions_1_1 && !compositions_1_1.done && (_b = compositions_1.return))
            _b.call(compositions_1);
        } finally {
          if (e_1)
            throw e_1.error;
        }
        return [
          7
          /*endfinally*/
        ];
      case 11:
        return [
          2
          /*return*/
        ];
    }
  });
}
function initialReducedCompositions(initialComposition, narrowStrategies) {
  var hasEllipsis, applicableStrategies, _loop_1;
  return __generator3(this, function(_a) {
    switch (_a.label) {
      case 0:
        hasEllipsis = initialComposition.some(isEllipsis);
        applicableStrategies = narrowStrategies.filter(function(strategy) {
          return strategy !== "dropEllipsis" || hasEllipsis;
        });
        _loop_1 = function() {
          var dropEllipsis, dropNav;
          return __generator3(this, function(_b) {
            switch (_b.label) {
              case 0:
                dropEllipsis = applicableStrategies.includes("dropEllipsis");
                dropNav = applicableStrategies.includes("dropNav");
                return [4, initialComposition.filter(function(item) {
                  return (!dropEllipsis || !isEllipsis(item)) && (!dropNav || !isNav(item));
                })];
              case 1:
                _b.sent();
                applicableStrategies.pop();
                return [
                  2
                  /*return*/
                ];
            }
          });
        };
        _a.label = 1;
      case 1:
        if (!(applicableStrategies.length > 0))
          return [3, 3];
        return [5, _loop_1()];
      case 2:
        _a.sent();
        return [3, 1];
      case 3:
        return [
          2
          /*return*/
        ];
    }
  });
}
function narrowToWideCompositionsUnfiltered(current, total, renderNav) {
  var navPrevious, navNext, activePage, leftRanges, rightRanges, staggeredPairs, staggeredPairs_1, staggeredPairs_1_1, _a, leftRange, rightRange, e_2_1;
  var e_2, _b;
  return __generator3(this, function(_c) {
    switch (_c.label) {
      case 0:
        navPrevious = createNavPrevious(current > 1 ? current - 1 : void 0);
        navNext = createNavNext(current < total ? current + 1 : void 0);
        activePage = createActivePage(current);
        leftRanges = narrowToWidePaginationItemRanges(1, current - 1, "L");
        rightRanges = narrowToWidePaginationItemRanges(current + 1, total, "R");
        staggeredPairs = staggeredIterationRightRangeFirst(leftRanges, rightRanges);
        _c.label = 1;
      case 1:
        _c.trys.push([1, 8, 9, 10]);
        staggeredPairs_1 = __values3(staggeredPairs), staggeredPairs_1_1 = staggeredPairs_1.next();
        _c.label = 2;
      case 2:
        if (!!staggeredPairs_1_1.done)
          return [3, 7];
        _a = staggeredPairs_1_1.value, leftRange = _a.leftRange, rightRange = _a.rightRange;
        if (!renderNav)
          return [3, 4];
        return [4, __spreadArray2(__spreadArray2(__spreadArray2(__spreadArray2([navPrevious], __read2(leftRange), false), [activePage], false), __read2(rightRange), false), [navNext], false)];
      case 3:
        _c.sent();
        return [3, 6];
      case 4:
        return [4, __spreadArray2(__spreadArray2(__spreadArray2([], __read2(leftRange), false), [activePage], false), __read2(rightRange), false)];
      case 5:
        _c.sent();
        _c.label = 6;
      case 6:
        staggeredPairs_1_1 = staggeredPairs_1.next();
        return [3, 2];
      case 7:
        return [3, 10];
      case 8:
        e_2_1 = _c.sent();
        e_2 = { error: e_2_1 };
        return [3, 10];
      case 9:
        try {
          if (staggeredPairs_1_1 && !staggeredPairs_1_1.done && (_b = staggeredPairs_1.return))
            _b.call(staggeredPairs_1);
        } finally {
          if (e_2)
            throw e_2.error;
        }
        return [
          7
          /*endfinally*/
        ];
      case 10:
        return [
          2
          /*return*/
        ];
    }
  });
}
function staggeredIterationRightRangeFirst(leftRanges, rightRanges) {
  var zippedRanges, initial, _a, _b, leftRange, _c, rightRange, zippedRanges_1, zippedRanges_1_1, _d, nextLeftRange, nextRightRange, e_3_1;
  var e_3, _e;
  return __generator3(this, function(_f) {
    switch (_f.label) {
      case 0:
        zippedRanges = zipIterators(leftRanges, rightRanges);
        initial = zippedRanges.next();
        if (initial.done)
          return [
            2
            /*return*/
          ];
        _a = __read2(initial.value, 2), _b = _a[0], leftRange = _b === void 0 ? [] : _b, _c = _a[1], rightRange = _c === void 0 ? [] : _c;
        return [4, { leftRange, rightRange }];
      case 1:
        _f.sent();
        _f.label = 2;
      case 2:
        _f.trys.push([2, 9, 10, 11]);
        zippedRanges_1 = __values3(zippedRanges), zippedRanges_1_1 = zippedRanges_1.next();
        _f.label = 3;
      case 3:
        if (!!zippedRanges_1_1.done)
          return [3, 8];
        _d = __read2(zippedRanges_1_1.value, 2), nextLeftRange = _d[0], nextRightRange = _d[1];
        if (!nextRightRange)
          return [3, 5];
        rightRange = nextRightRange;
        return [4, { leftRange, rightRange }];
      case 4:
        _f.sent();
        _f.label = 5;
      case 5:
        if (!nextLeftRange)
          return [3, 7];
        leftRange = nextLeftRange;
        return [4, { leftRange, rightRange }];
      case 6:
        _f.sent();
        _f.label = 7;
      case 7:
        zippedRanges_1_1 = zippedRanges_1.next();
        return [3, 3];
      case 8:
        return [3, 11];
      case 9:
        e_3_1 = _f.sent();
        e_3 = { error: e_3_1 };
        return [3, 11];
      case 10:
        try {
          if (zippedRanges_1_1 && !zippedRanges_1_1.done && (_e = zippedRanges_1.return))
            _e.call(zippedRanges_1);
        } finally {
          if (e_3)
            throw e_3.error;
        }
        return [
          7
          /*endfinally*/
        ];
      case 11:
        return [
          2
          /*return*/
        ];
    }
  });
}

// node_modules/react-responsive-pagination/lib/helpers/util.js
function sum(items) {
  return items.reduce(function(acc, width) {
    return acc + width;
  }, 0);
}
function sanatizeInteger(maybeInteger) {
  return typeof maybeInteger === "number" && Number.isInteger(maybeInteger) ? maybeInteger : void 0;
}
function sanatizeBoolean(maybeBoolean) {
  return typeof maybeBoolean === "boolean" ? maybeBoolean : void 0;
}

// node_modules/react-responsive-pagination/lib/paginationItem.js
function compositionToPaginationItems(compositionItems, options) {
  var _a;
  var activeLabel = (_a = options === null || options === void 0 ? void 0 : options.a11yActiveLabel) !== null && _a !== void 0 ? _a : "(current)";
  var previousLabel = (options === null || options === void 0 ? void 0 : options.previousLabel) || "«";
  var a11yPreviousLabel = (options === null || options === void 0 ? void 0 : options.ariaPreviousLabel) || "Previous";
  var nextLabel = (options === null || options === void 0 ? void 0 : options.nextLabel) || "»";
  var a11yNextLabel = (options === null || options === void 0 ? void 0 : options.ariaNextLabel) || "Next";
  return compositionItems.map(function(_a2) {
    var type = _a2.type, page = _a2.page;
    switch (type) {
      case "<":
        return {
          type: "previous",
          key: "previous".concat(page === void 0 ? "_disabled" : ""),
          label: previousLabel,
          a11yLabel: previousLabel === a11yPreviousLabel ? void 0 : { label: a11yPreviousLabel, mode: "replace" },
          gotoPage: page
        };
      case ">":
        return {
          type: "next",
          key: "next".concat(page === void 0 ? "_disabled" : ""),
          label: nextLabel,
          a11yLabel: nextLabel === a11yNextLabel ? void 0 : { label: a11yNextLabel, mode: "replace" },
          gotoPage: page
        };
      case "…L":
      case "…R":
        return {
          type: "ellipsis",
          key: "ellipsis_".concat(type === "…L" ? "l" : "r"),
          label: "…",
          a11yHidden: true,
          gotoPage: void 0
        };
      default:
        return {
          type: "page",
          key: "".concat(type, "_").concat(page),
          label: page.toString(),
          a11yLabel: type === "active" && activeLabel ? { label: activeLabel, mode: "additional" } : void 0,
          gotoPage: page,
          active: type === "active"
        };
    }
  });
}

// node_modules/react-responsive-pagination/lib/hooks/useWidestComposition.js
var import_react6 = __toESM(require_react());

// node_modules/react-responsive-pagination/lib/helpers/ref.js
function setRefValue(ref, value) {
  if (typeof ref === "function") {
    ref(value);
  } else if (ref) {
    ref.current = value;
  }
}

// node_modules/react-responsive-pagination/lib/hooks/useContentWidth.js
var import_react2 = __toESM(require_react());

// node_modules/react-responsive-pagination/lib/helpers/style.js
function getElementWidth(element) {
  var style = getComputedStyle(element);
  return styleMetricToInt(style.marginLeft) + getWidth(element) + styleMetricToInt(style.marginRight);
}
function getContentWidth(element) {
  var style = getComputedStyle(element);
  return element.getBoundingClientRect().width - styleMetricToInt(style.borderLeftWidth) - styleMetricToInt(style.paddingLeft) - styleMetricToInt(style.paddingRight) - styleMetricToInt(style.borderRightWidth);
}
function getNonContentWidth(element) {
  var style = getComputedStyle(element);
  return styleMetricToInt(style.marginLeft) + styleMetricToInt(style.borderLeftWidth) + styleMetricToInt(style.paddingLeft) + styleMetricToInt(style.paddingRight) + styleMetricToInt(style.borderRightWidth) + styleMetricToInt(style.marginRight);
}
function getWidth(element) {
  return element.getBoundingClientRect().width;
}
function styleMetricToInt(styleAttribute) {
  return styleAttribute ? parseInt(styleAttribute) : 0;
}

// node_modules/react-responsive-pagination/lib/hooks/useResizeNotifier.js
var import_react = __toESM(require_react());

// node_modules/resize-observer-polyfill/dist/ResizeObserver.es.js
var MapShim = function() {
  if (typeof Map !== "undefined") {
    return Map;
  }
  function getIndex(arr, key) {
    var result = -1;
    arr.some(function(entry, index2) {
      if (entry[0] === key) {
        result = index2;
        return true;
      }
      return false;
    });
    return result;
  }
  return (
    /** @class */
    function() {
      function class_1() {
        this.__entries__ = [];
      }
      Object.defineProperty(class_1.prototype, "size", {
        /**
         * @returns {boolean}
         */
        get: function() {
          return this.__entries__.length;
        },
        enumerable: true,
        configurable: true
      });
      class_1.prototype.get = function(key) {
        var index2 = getIndex(this.__entries__, key);
        var entry = this.__entries__[index2];
        return entry && entry[1];
      };
      class_1.prototype.set = function(key, value) {
        var index2 = getIndex(this.__entries__, key);
        if (~index2) {
          this.__entries__[index2][1] = value;
        } else {
          this.__entries__.push([key, value]);
        }
      };
      class_1.prototype.delete = function(key) {
        var entries = this.__entries__;
        var index2 = getIndex(entries, key);
        if (~index2) {
          entries.splice(index2, 1);
        }
      };
      class_1.prototype.has = function(key) {
        return !!~getIndex(this.__entries__, key);
      };
      class_1.prototype.clear = function() {
        this.__entries__.splice(0);
      };
      class_1.prototype.forEach = function(callback, ctx) {
        if (ctx === void 0) {
          ctx = null;
        }
        for (var _i = 0, _a = this.__entries__; _i < _a.length; _i++) {
          var entry = _a[_i];
          callback.call(ctx, entry[1], entry[0]);
        }
      };
      return class_1;
    }()
  );
}();
var isBrowser = typeof window !== "undefined" && typeof document !== "undefined" && window.document === document;
var global$1 = function() {
  if (typeof global !== "undefined" && global.Math === Math) {
    return global;
  }
  if (typeof self !== "undefined" && self.Math === Math) {
    return self;
  }
  if (typeof window !== "undefined" && window.Math === Math) {
    return window;
  }
  return Function("return this")();
}();
var requestAnimationFrame$1 = function() {
  if (typeof requestAnimationFrame === "function") {
    return requestAnimationFrame.bind(global$1);
  }
  return function(callback) {
    return setTimeout(function() {
      return callback(Date.now());
    }, 1e3 / 60);
  };
}();
var trailingTimeout = 2;
function throttle(callback, delay) {
  var leadingCall = false, trailingCall = false, lastCallTime = 0;
  function resolvePending() {
    if (leadingCall) {
      leadingCall = false;
      callback();
    }
    if (trailingCall) {
      proxy();
    }
  }
  function timeoutCallback() {
    requestAnimationFrame$1(resolvePending);
  }
  function proxy() {
    var timeStamp = Date.now();
    if (leadingCall) {
      if (timeStamp - lastCallTime < trailingTimeout) {
        return;
      }
      trailingCall = true;
    } else {
      leadingCall = true;
      trailingCall = false;
      setTimeout(timeoutCallback, delay);
    }
    lastCallTime = timeStamp;
  }
  return proxy;
}
var REFRESH_DELAY = 20;
var transitionKeys = ["top", "right", "bottom", "left", "width", "height", "size", "weight"];
var mutationObserverSupported = typeof MutationObserver !== "undefined";
var ResizeObserverController = (
  /** @class */
  function() {
    function ResizeObserverController2() {
      this.connected_ = false;
      this.mutationEventsAdded_ = false;
      this.mutationsObserver_ = null;
      this.observers_ = [];
      this.onTransitionEnd_ = this.onTransitionEnd_.bind(this);
      this.refresh = throttle(this.refresh.bind(this), REFRESH_DELAY);
    }
    ResizeObserverController2.prototype.addObserver = function(observer) {
      if (!~this.observers_.indexOf(observer)) {
        this.observers_.push(observer);
      }
      if (!this.connected_) {
        this.connect_();
      }
    };
    ResizeObserverController2.prototype.removeObserver = function(observer) {
      var observers2 = this.observers_;
      var index2 = observers2.indexOf(observer);
      if (~index2) {
        observers2.splice(index2, 1);
      }
      if (!observers2.length && this.connected_) {
        this.disconnect_();
      }
    };
    ResizeObserverController2.prototype.refresh = function() {
      var changesDetected = this.updateObservers_();
      if (changesDetected) {
        this.refresh();
      }
    };
    ResizeObserverController2.prototype.updateObservers_ = function() {
      var activeObservers = this.observers_.filter(function(observer) {
        return observer.gatherActive(), observer.hasActive();
      });
      activeObservers.forEach(function(observer) {
        return observer.broadcastActive();
      });
      return activeObservers.length > 0;
    };
    ResizeObserverController2.prototype.connect_ = function() {
      if (!isBrowser || this.connected_) {
        return;
      }
      document.addEventListener("transitionend", this.onTransitionEnd_);
      window.addEventListener("resize", this.refresh);
      if (mutationObserverSupported) {
        this.mutationsObserver_ = new MutationObserver(this.refresh);
        this.mutationsObserver_.observe(document, {
          attributes: true,
          childList: true,
          characterData: true,
          subtree: true
        });
      } else {
        document.addEventListener("DOMSubtreeModified", this.refresh);
        this.mutationEventsAdded_ = true;
      }
      this.connected_ = true;
    };
    ResizeObserverController2.prototype.disconnect_ = function() {
      if (!isBrowser || !this.connected_) {
        return;
      }
      document.removeEventListener("transitionend", this.onTransitionEnd_);
      window.removeEventListener("resize", this.refresh);
      if (this.mutationsObserver_) {
        this.mutationsObserver_.disconnect();
      }
      if (this.mutationEventsAdded_) {
        document.removeEventListener("DOMSubtreeModified", this.refresh);
      }
      this.mutationsObserver_ = null;
      this.mutationEventsAdded_ = false;
      this.connected_ = false;
    };
    ResizeObserverController2.prototype.onTransitionEnd_ = function(_a) {
      var _b = _a.propertyName, propertyName = _b === void 0 ? "" : _b;
      var isReflowProperty = transitionKeys.some(function(key) {
        return !!~propertyName.indexOf(key);
      });
      if (isReflowProperty) {
        this.refresh();
      }
    };
    ResizeObserverController2.getInstance = function() {
      if (!this.instance_) {
        this.instance_ = new ResizeObserverController2();
      }
      return this.instance_;
    };
    ResizeObserverController2.instance_ = null;
    return ResizeObserverController2;
  }()
);
var defineConfigurable = function(target, props) {
  for (var _i = 0, _a = Object.keys(props); _i < _a.length; _i++) {
    var key = _a[_i];
    Object.defineProperty(target, key, {
      value: props[key],
      enumerable: false,
      writable: false,
      configurable: true
    });
  }
  return target;
};
var getWindowOf = function(target) {
  var ownerGlobal = target && target.ownerDocument && target.ownerDocument.defaultView;
  return ownerGlobal || global$1;
};
var emptyRect = createRectInit(0, 0, 0, 0);
function toFloat(value) {
  return parseFloat(value) || 0;
}
function getBordersSize(styles) {
  var positions = [];
  for (var _i = 1; _i < arguments.length; _i++) {
    positions[_i - 1] = arguments[_i];
  }
  return positions.reduce(function(size, position) {
    var value = styles["border-" + position + "-width"];
    return size + toFloat(value);
  }, 0);
}
function getPaddings(styles) {
  var positions = ["top", "right", "bottom", "left"];
  var paddings = {};
  for (var _i = 0, positions_1 = positions; _i < positions_1.length; _i++) {
    var position = positions_1[_i];
    var value = styles["padding-" + position];
    paddings[position] = toFloat(value);
  }
  return paddings;
}
function getSVGContentRect(target) {
  var bbox = target.getBBox();
  return createRectInit(0, 0, bbox.width, bbox.height);
}
function getHTMLElementContentRect(target) {
  var clientWidth = target.clientWidth, clientHeight = target.clientHeight;
  if (!clientWidth && !clientHeight) {
    return emptyRect;
  }
  var styles = getWindowOf(target).getComputedStyle(target);
  var paddings = getPaddings(styles);
  var horizPad = paddings.left + paddings.right;
  var vertPad = paddings.top + paddings.bottom;
  var width = toFloat(styles.width), height = toFloat(styles.height);
  if (styles.boxSizing === "border-box") {
    if (Math.round(width + horizPad) !== clientWidth) {
      width -= getBordersSize(styles, "left", "right") + horizPad;
    }
    if (Math.round(height + vertPad) !== clientHeight) {
      height -= getBordersSize(styles, "top", "bottom") + vertPad;
    }
  }
  if (!isDocumentElement(target)) {
    var vertScrollbar = Math.round(width + horizPad) - clientWidth;
    var horizScrollbar = Math.round(height + vertPad) - clientHeight;
    if (Math.abs(vertScrollbar) !== 1) {
      width -= vertScrollbar;
    }
    if (Math.abs(horizScrollbar) !== 1) {
      height -= horizScrollbar;
    }
  }
  return createRectInit(paddings.left, paddings.top, width, height);
}
var isSVGGraphicsElement = function() {
  if (typeof SVGGraphicsElement !== "undefined") {
    return function(target) {
      return target instanceof getWindowOf(target).SVGGraphicsElement;
    };
  }
  return function(target) {
    return target instanceof getWindowOf(target).SVGElement && typeof target.getBBox === "function";
  };
}();
function isDocumentElement(target) {
  return target === getWindowOf(target).document.documentElement;
}
function getContentRect(target) {
  if (!isBrowser) {
    return emptyRect;
  }
  if (isSVGGraphicsElement(target)) {
    return getSVGContentRect(target);
  }
  return getHTMLElementContentRect(target);
}
function createReadOnlyRect(_a) {
  var x = _a.x, y = _a.y, width = _a.width, height = _a.height;
  var Constr = typeof DOMRectReadOnly !== "undefined" ? DOMRectReadOnly : Object;
  var rect = Object.create(Constr.prototype);
  defineConfigurable(rect, {
    x,
    y,
    width,
    height,
    top: y,
    right: x + width,
    bottom: height + y,
    left: x
  });
  return rect;
}
function createRectInit(x, y, width, height) {
  return { x, y, width, height };
}
var ResizeObservation = (
  /** @class */
  function() {
    function ResizeObservation2(target) {
      this.broadcastWidth = 0;
      this.broadcastHeight = 0;
      this.contentRect_ = createRectInit(0, 0, 0, 0);
      this.target = target;
    }
    ResizeObservation2.prototype.isActive = function() {
      var rect = getContentRect(this.target);
      this.contentRect_ = rect;
      return rect.width !== this.broadcastWidth || rect.height !== this.broadcastHeight;
    };
    ResizeObservation2.prototype.broadcastRect = function() {
      var rect = this.contentRect_;
      this.broadcastWidth = rect.width;
      this.broadcastHeight = rect.height;
      return rect;
    };
    return ResizeObservation2;
  }()
);
var ResizeObserverEntry = (
  /** @class */
  function() {
    function ResizeObserverEntry2(target, rectInit) {
      var contentRect = createReadOnlyRect(rectInit);
      defineConfigurable(this, { target, contentRect });
    }
    return ResizeObserverEntry2;
  }()
);
var ResizeObserverSPI = (
  /** @class */
  function() {
    function ResizeObserverSPI2(callback, controller, callbackCtx) {
      this.activeObservations_ = [];
      this.observations_ = new MapShim();
      if (typeof callback !== "function") {
        throw new TypeError("The callback provided as parameter 1 is not a function.");
      }
      this.callback_ = callback;
      this.controller_ = controller;
      this.callbackCtx_ = callbackCtx;
    }
    ResizeObserverSPI2.prototype.observe = function(target) {
      if (!arguments.length) {
        throw new TypeError("1 argument required, but only 0 present.");
      }
      if (typeof Element === "undefined" || !(Element instanceof Object)) {
        return;
      }
      if (!(target instanceof getWindowOf(target).Element)) {
        throw new TypeError('parameter 1 is not of type "Element".');
      }
      var observations = this.observations_;
      if (observations.has(target)) {
        return;
      }
      observations.set(target, new ResizeObservation(target));
      this.controller_.addObserver(this);
      this.controller_.refresh();
    };
    ResizeObserverSPI2.prototype.unobserve = function(target) {
      if (!arguments.length) {
        throw new TypeError("1 argument required, but only 0 present.");
      }
      if (typeof Element === "undefined" || !(Element instanceof Object)) {
        return;
      }
      if (!(target instanceof getWindowOf(target).Element)) {
        throw new TypeError('parameter 1 is not of type "Element".');
      }
      var observations = this.observations_;
      if (!observations.has(target)) {
        return;
      }
      observations.delete(target);
      if (!observations.size) {
        this.controller_.removeObserver(this);
      }
    };
    ResizeObserverSPI2.prototype.disconnect = function() {
      this.clearActive();
      this.observations_.clear();
      this.controller_.removeObserver(this);
    };
    ResizeObserverSPI2.prototype.gatherActive = function() {
      var _this = this;
      this.clearActive();
      this.observations_.forEach(function(observation) {
        if (observation.isActive()) {
          _this.activeObservations_.push(observation);
        }
      });
    };
    ResizeObserverSPI2.prototype.broadcastActive = function() {
      if (!this.hasActive()) {
        return;
      }
      var ctx = this.callbackCtx_;
      var entries = this.activeObservations_.map(function(observation) {
        return new ResizeObserverEntry(observation.target, observation.broadcastRect());
      });
      this.callback_.call(ctx, entries, ctx);
      this.clearActive();
    };
    ResizeObserverSPI2.prototype.clearActive = function() {
      this.activeObservations_.splice(0);
    };
    ResizeObserverSPI2.prototype.hasActive = function() {
      return this.activeObservations_.length > 0;
    };
    return ResizeObserverSPI2;
  }()
);
var observers = typeof WeakMap !== "undefined" ? /* @__PURE__ */ new WeakMap() : new MapShim();
var ResizeObserver = (
  /** @class */
  function() {
    function ResizeObserver2(callback) {
      if (!(this instanceof ResizeObserver2)) {
        throw new TypeError("Cannot call a class as a function.");
      }
      if (!arguments.length) {
        throw new TypeError("1 argument required, but only 0 present.");
      }
      var controller = ResizeObserverController.getInstance();
      var observer = new ResizeObserverSPI(callback, controller, this);
      observers.set(this, observer);
    }
    return ResizeObserver2;
  }()
);
[
  "observe",
  "unobserve",
  "disconnect"
].forEach(function(method) {
  ResizeObserver.prototype[method] = function() {
    var _a;
    return (_a = observers.get(this))[method].apply(_a, arguments);
  };
});
var index = function() {
  if (typeof global$1.ResizeObserver !== "undefined") {
    return global$1.ResizeObserver;
  }
  return ResizeObserver;
}();
var ResizeObserver_es_default = index;

// node_modules/react-responsive-pagination/lib/hooks/useResizeNotifier.js
function useResizeNotifier(element, callback) {
  var callBackRef = (0, import_react.useRef)(callback);
  (0, import_react.useLayoutEffect)(function() {
    callBackRef.current = callback;
  }, [callback]);
  (0, import_react.useLayoutEffect)(function() {
    if (!element)
      return;
    var resizeObserver = new ResizeObserver_es_default(withResizeLoopDetection(function() {
      callBackRef.current();
    }));
    resizeObserver.observe(element);
    return function() {
      resizeObserver.disconnect();
    };
  }, [element]);
}
function withResizeLoopDetection(callback) {
  return function(entries, resizeObserver) {
    var elements = entries.map(function(entry) {
      return entry.target;
    });
    var rectsBefore = elements.map(function(element) {
      return element.getBoundingClientRect();
    });
    callback();
    var rectsAfter = elements.map(function(element) {
      return element.getBoundingClientRect();
    });
    var changedElements = elements.filter(function(_, i) {
      return !areRectSizesEqual(rectsBefore[i], rectsAfter[i]);
    });
    changedElements.forEach(function(element) {
      return unobserveUntilNextFrame(element, resizeObserver);
    });
  };
}
function unobserveUntilNextFrame(element, resizeObserver) {
  resizeObserver.unobserve(element);
  requestAnimationFrame(function() {
    resizeObserver.observe(element);
  });
}
function areRectSizesEqual(rect1, rect2) {
  return rect1.width === rect2.width && rect1.height === rect2.height;
}

// node_modules/react-responsive-pagination/lib/hooks/useContentWidth.js
var __read3 = function(o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m)
    return o;
  var i = m.call(o), r, ar = [], e;
  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
      ar.push(r.value);
  } catch (error) {
    e = { error };
  } finally {
    try {
      if (r && !r.done && (m = i["return"]))
        m.call(i);
    } finally {
      if (e)
        throw e.error;
    }
  }
  return ar;
};
function useContentWidth(element) {
  var _a = __read3((0, import_react2.useState)(), 2), width = _a[0], setWidth = _a[1];
  function syncWidth() {
    var newWidth = element ? getContentWidth(element) : void 0;
    if (width !== newWidth) {
      setWidth(newWidth);
    }
  }
  useResizeNotifier(element, syncWidth);
  (0, import_react2.useLayoutEffect)(syncWidth);
  return width;
}

// node_modules/react-responsive-pagination/lib/hooks/useAvailableWidth.js
function useAvailableWidth(element) {
  var _a;
  return useContentWidth((_a = element === null || element === void 0 ? void 0 : element.parentElement) !== null && _a !== void 0 ? _a : void 0);
}

// node_modules/react-responsive-pagination/lib/hooks/useWidestCompositionForWidth.js
var import_react5 = __toESM(require_react());

// node_modules/react-responsive-pagination/lib/hooks/useWidthCalculator/index.js
var import_react3 = __toESM(require_react());

// node_modules/react-responsive-pagination/lib/widthCalculator/totalWidthCalculator.js
function createTotalWidthCalculator(_a) {
  var getItemWidth = _a.getItemWidth, outerFrameWidth = _a.outerFrameWidth;
  return function widthCalculator(items) {
    var itemWidths = items.map(getItemWidth);
    var contentWidth = sum(itemWidths);
    return outerFrameWidth + contentWidth;
  };
}

// node_modules/react-responsive-pagination/lib/widthCalculator/itemWidthCalculator.js
function createItemWidthCalculator(_a) {
  var getPageWidth = _a.getPageWidth, getNavWidth = _a.getNavWidth, ellipsisWidth = _a.ellipsisWidth;
  return function itemWidthCalculator(_a2) {
    var type = _a2.type, page = _a2.page;
    if (type === "page" || type === "active") {
      return getPageWidth(page.toString(), type === "active");
    }
    if (type === "<" || type === ">") {
      return getNavWidth(type, page !== void 0);
    }
    if (type === "…L" || type === "…R") {
      return ellipsisWidth;
    }
    var _exCheck = type;
    return _exCheck;
  };
}

// node_modules/react-responsive-pagination/lib/widthCalculator/navWidthCalculator.js
function createNavWidthCalculator(widths) {
  return function navWidthCalculator(type, enabled) {
    var widthsForType = widths[type];
    return enabled ? widthsForType.enabled : widthsForType.disabled;
  };
}

// node_modules/react-responsive-pagination/lib/widthCalculator/pageWidthCalculator.js
function createPageWidthCalculator(_a) {
  var getActivePageWidth = _a.getActivePageWidth, getNormalPageWidth = _a.getNormalPageWidth;
  return function pageWidthCalculator(label, active) {
    return active ? getActivePageWidth(label) : getNormalPageWidth(label);
  };
}

// node_modules/react-responsive-pagination/lib/widthCalculator/numberWidthCalculator.js
function createNumberWidthCalculator(widths) {
  return function numberWidthCalculator(label) {
    var numDigits = label.length;
    return widths.singleDigit + (widths.doubleDigit - widths.singleDigit) * (numDigits - 1);
  };
}

// node_modules/react-responsive-pagination/lib/widthCalculator/index.js
function createWidthCalculator(baseMetrics) {
  if (!baseMetrics) {
    return { requiredBaseMetrics: baseMetricItemsToMeasure };
  }
  return createGraph(baseMetrics);
}
function createGraph(baseMetrics) {
  var itemWidths = baseMetrics.itemWidths, outerFrameWidth = baseMetrics.outerFrameWidth;
  return createTotalWidthCalculator({
    getItemWidth: createItemWidthCalculator({
      getPageWidth: createPageWidthCalculator({
        getNormalPageWidth: createNumberWidthCalculator({
          singleDigit: itemWidths.normalPageSingleDigit,
          doubleDigit: itemWidths.normalPageDoubleDigit
        }),
        getActivePageWidth: createNumberWidthCalculator({
          singleDigit: itemWidths.activePageSingleDigit,
          doubleDigit: itemWidths.activePageDoubleDigit
        })
      }),
      getNavWidth: createNavWidthCalculator({
        "<": {
          enabled: itemWidths.navPreviousEnabled,
          disabled: itemWidths.navPreviousDisabled
        },
        ">": {
          enabled: itemWidths.navNextEnabled,
          disabled: itemWidths.navNextDisabled
        }
      }),
      ellipsisWidth: itemWidths.ellipsis
    }),
    outerFrameWidth
  });
}
var baseMetricItemsToMeasure = {
  normalPageSingleDigit: createPage(8),
  normalPageDoubleDigit: createPage(88),
  activePageSingleDigit: createActivePage(8),
  activePageDoubleDigit: createActivePage(88),
  navPreviousEnabled: createNavPrevious(0),
  navPreviousDisabled: createNavPrevious(void 0),
  navNextEnabled: createNavNext(0),
  navNextDisabled: createNavNext(void 0),
  ellipsis: createEllipsis("L")
};

// node_modules/react-responsive-pagination/lib/helpers/object.js
var __read4 = function(o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m)
    return o;
  var i = m.call(o), r, ar = [], e;
  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
      ar.push(r.value);
  } catch (error) {
    e = { error };
  } finally {
    try {
      if (r && !r.done && (m = i["return"]))
        m.call(i);
    } finally {
      if (e)
        throw e.error;
    }
  }
  return ar;
};
function objectUnzip(object) {
  var entries = Object.entries(object);
  var keys = entries.map(function(_a) {
    var _b = __read4(_a, 2), key = _b[0], _ = _b[1];
    return key;
  });
  var values = entries.map(function(_a) {
    var _b = __read4(_a, 2), _ = _b[0], value = _b[1];
    return value;
  });
  return [keys, values];
}
function objectZip(keys, values) {
  var ret = {};
  keys.forEach(function(key, index2) {
    ret[key] = values[index2];
  });
  return ret;
}

// node_modules/react-responsive-pagination/lib/hooks/useWidthCalculator/getViewMetrics.js
function getViewMetricsFromContainer(containerElement, itemKeys) {
  var itemElements = Array.from(containerElement.children);
  return {
    outerFrameWidth: getNonContentWidth(containerElement),
    itemWidths: getItemWidthsFromItemDomElements(itemKeys, itemElements)
  };
}
function getItemWidthsFromItemDomElements(itemKeys, itemElements) {
  var itemWidths = itemElements.map(getElementWidth);
  return objectZip(itemKeys, itemWidths);
}

// node_modules/react-responsive-pagination/lib/hooks/useWidthCalculator/index.js
var __read5 = function(o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m)
    return o;
  var i = m.call(o), r, ar = [], e;
  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
      ar.push(r.value);
  } catch (error) {
    e = { error };
  } finally {
    try {
      if (r && !r.done && (m = i["return"]))
        m.call(i);
    } finally {
      if (e)
        throw e.error;
    }
  }
  return ar;
};
function useWidthCalculator() {
  var _a = __read5((0, import_react3.useState)(null), 2), baseMetrics = _a[0], setBaseMetrics = _a[1];
  var resetCalculator = (0, import_react3.useCallback)(function() {
    return setBaseMetrics(null);
  }, []);
  var calculatorResult = (0, import_react3.useMemo)(function() {
    return createWidthCalculator(baseMetrics);
  }, [baseMetrics]);
  if ("requiredBaseMetrics" in calculatorResult) {
    var _b = __read5(objectUnzip(calculatorResult.requiredBaseMetrics), 2), itemKeys_1 = _b[0], items = _b[1];
    return {
      renderNeeded: {
        items,
        ref: function(containerElement) {
          if (containerElement) {
            setBaseMetrics(getViewMetricsFromContainer(containerElement, itemKeys_1));
          }
        }
      },
      clearCache: resetCalculator
    };
  }
  return {
    calculator: calculatorResult,
    clearCache: resetCalculator
  };
}

// node_modules/react-responsive-pagination/lib/hooks/useFoutDetector.js
var import_react4 = __toESM(require_react());
function useFoutDetector(getElements, handleFout) {
  (0, import_react4.useLayoutEffect)(function() {
    var elements = getElements();
    if (!elements)
      return;
    return setupWidthChangeAfterRenderListener(elements, handleFout);
  });
}
function setupWidthChangeAfterRenderListener(elements, handleWidthChangeAfterRender) {
  var getInitialWidth = createInitialWidthProvider(elements);
  var hasWidthChanged = function(element) {
    return isSignificantDifference(getInitialWidth(element), getWidth(element));
  };
  return setupResizeObserver(elements, function(maybeResizedElements) {
    if (maybeResizedElements.some(hasWidthChanged)) {
      handleWidthChangeAfterRender();
    }
  });
}
function createInitialWidthProvider(elements) {
  var initialWidths = elements.map(getWidth);
  return function getInitialWidth(element) {
    var index2 = elements.indexOf(element);
    return initialWidths[index2];
  };
}
function setupResizeObserver(elements, handleElementsResized) {
  var resizeObserver = new ResizeObserver_es_default(function(entries) {
    var elements2 = entries.map(getTargetElement);
    handleElementsResized(elements2);
  });
  elements.forEach(function(element) {
    return resizeObserver.observe(element);
  });
  return function() {
    return resizeObserver.disconnect();
  };
}
function getTargetElement(entry) {
  return entry.target;
}
function isSignificantDifference(width1, width2) {
  return Math.abs(width1 - width2) > 0.5;
}

// node_modules/react-responsive-pagination/lib/hooks/useWidestCompositionForWidth.js
function useWidestCompositionForWidth(narrowToWideCompositionsProvider, maxWidth) {
  var widthCalculator = useWidthCalculator();
  var containerElementRef = (0, import_react5.useRef)(null);
  var clearCache = widthCalculator.clearCache;
  useFoutDetector(function() {
    return getItemsDomElements(containerElementRef.current);
  }, clearCache);
  if ("renderNeeded" in widthCalculator) {
    return {
      items: widthCalculator.renderNeeded.items,
      ref: function(containerElement) {
        widthCalculator.renderNeeded.ref(containerElement);
        containerElementRef.current = containerElement;
      },
      clearCache
    };
  } else {
    return {
      items: getLargestFittingCompositionWithFallback(narrowToWideCompositionsProvider, widthCalculator.calculator, maxWidth),
      ref: containerElementRef,
      clearCache
    };
  }
}
function getLargestFittingCompositionWithFallback(getNarrowToWideCompositions, getCompositionWidth, maxWidth) {
  var _a, _b;
  var narrowToWideCompositions2 = getNarrowToWideCompositions();
  var firstComposition = (_a = iteratorNext(narrowToWideCompositions2)) !== null && _a !== void 0 ? _a : [];
  var doesCompositionFit = function(composition) {
    return getCompositionWidth(composition) < maxWidth;
  };
  return (_b = lastWhere(narrowToWideCompositions2, doesCompositionFit)) !== null && _b !== void 0 ? _b : firstComposition;
}
function getItemsDomElements(viewDomElement) {
  return viewDomElement && Array.from(viewDomElement.children);
}

// node_modules/react-responsive-pagination/lib/hooks/useWidestComposition.js
var __read6 = function(o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m)
    return o;
  var i = m.call(o), r, ar = [], e;
  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
      ar.push(r.value);
  } catch (error) {
    e = { error };
  } finally {
    try {
      if (r && !r.done && (m = i["return"]))
        m.call(i);
    } finally {
      if (e)
        throw e.error;
    }
  }
  return ar;
};
function useWidestComposition(narrowToWideCompositionsProvider, maxWidth) {
  var _a;
  var _b = __read6((0, import_react6.useState)(null), 2), containerElement = _b[0], setContainerElement = _b[1];
  var availableWidth = useAvailableWidth(maxWidth === void 0 ? containerElement : null);
  var width = (_a = maxWidth !== null && maxWidth !== void 0 ? maxWidth : availableWidth) !== null && _a !== void 0 ? _a : 0;
  var _c = useWidestCompositionForWidth(narrowToWideCompositionsProvider, width), items = _c.items, widestCompositionRef = _c.ref, clearCache = _c.clearCache;
  var ref = (0, import_react6.useCallback)(function(element) {
    setRefValue(widestCompositionRef, element);
    setContainerElement(element);
  }, [widestCompositionRef]);
  return {
    items,
    ref,
    clearCache
  };
}

// node_modules/react-responsive-pagination/lib/hooks/usePaginationItems.js
function usePaginationItems(inputCurrent, inputTotal, maxWidth, options) {
  var narrowToWideCompositionsProvider = function() {
    var _a2, _b, _c;
    return narrowToWideCompositions({
      current: (_a2 = sanatizeInteger(inputCurrent)) !== null && _a2 !== void 0 ? _a2 : 0,
      total: (_b = sanatizeInteger(inputTotal)) !== null && _b !== void 0 ? _b : 0,
      narrowStrategies: sanatizeNarrowStrategies(options === null || options === void 0 ? void 0 : options.narrowStrategy),
      renderNav: (_c = sanatizeBoolean(options === null || options === void 0 ? void 0 : options.renderNav)) !== null && _c !== void 0 ? _c : true
    });
  };
  var _a = useWidestComposition(narrowToWideCompositionsProvider, maxWidth), compositionItems = _a.items, ref = _a.ref, clearCache = _a.clearCache;
  (0, import_react7.useEffect)(function() {
    return function() {
      return clearCache();
    };
  }, [clearCache, options === null || options === void 0 ? void 0 : options.previousLabel, options === null || options === void 0 ? void 0 : options.nextLabel]);
  var items = compositionToPaginationItems(compositionItems, options);
  return { items, ref, clearCache };
}
function sanatizeNarrowStrategies(inputNarrowStrategies) {
  return (Array.isArray(inputNarrowStrategies) ? inputNarrowStrategies : [inputNarrowStrategies]).filter(function(strategy) {
    return strategy === "dropEllipsis" || strategy === "dropNav";
  });
}

// node_modules/react-responsive-pagination/lib/helpers/dom.js
function preventDefault(handler) {
  return function(e) {
    e.preventDefault();
    handler();
  };
}

// node_modules/react-responsive-pagination/lib/index.js
var bootstrap4PaginationPreset = {};
var bootstrap5PaginationPreset = {
  ariaCurrentAttr: true,
  a11yActiveLabel: "",
  srOnlyClassName: ""
};
var lib_default = (0, import_react8.memo)(BootstrapPagination);
function BootstrapPagination(_a) {
  var current = _a.current, total = _a.total, handlePageChange = _a.onPageChange, maxWidth = _a.maxWidth, narrowStrategy = _a.narrowStrategy, className = _a.className, _b = _a.extraClassName, extraClassName = _b === void 0 ? "justify-content-center" : _b, _c = _a.pageItemClassName, pageItemClassName = _c === void 0 ? "page-item" : _c, _d = _a.pageLinkClassName, pageLinkClassName = _d === void 0 ? "page-link" : _d, _e = _a.activeItemClassName, activeItemClassName = _e === void 0 ? "active" : _e, _f = _a.disabledItemClassName, disabledItemClassName = _f === void 0 ? "disabled" : _f, _g = _a.srOnlyClassName, srOnlyClassName = _g === void 0 ? "sr-only" : _g, previousLabel = _a.previousLabel, nextLabel = _a.nextLabel, ariaPreviousLabel = _a.ariaPreviousLabel, ariaNextLabel = _a.ariaNextLabel, _h = _a.renderNav, renderNav = _h === void 0 ? true : _h, a11yActiveLabel = _a.a11yActiveLabel, ariaCurrentAttr = _a.ariaCurrentAttr, _j = _a.linkHref, linkHref = _j === void 0 ? "hash" : _j;
  var _k = usePaginationItems(current, total, maxWidth, {
    narrowStrategy,
    previousLabel,
    nextLabel,
    ariaPreviousLabel,
    ariaNextLabel,
    renderNav,
    a11yActiveLabel
  }), items = _k.items, ref = _k.ref, clearCache = _k.clearCache;
  (0, import_react8.useEffect)(function() {
    return function() {
      return clearCache();
    };
  }, [
    clearCache,
    className,
    pageItemClassName,
    pageLinkClassName,
    activeItemClassName,
    disabledItemClassName,
    srOnlyClassName
  ]);
  if (items.length === 0)
    return null;
  function getContainerClassName() {
    if (className !== void 0) {
      return className;
    } else if (extraClassName) {
      return "pagination ".concat(extraClassName);
    } else {
      return "pagination";
    }
  }
  function getLabel(label, a11yLabel) {
    return import_react8.default.createElement(
      import_react8.default.Fragment,
      null,
      !a11yLabel || a11yLabel.mode === "additional" ? label : import_react8.default.createElement("span", { "aria-hidden": "true" }, label),
      a11yLabel && srOnlyClassName && import_react8.default.createElement("span", { className: srOnlyClassName }, "".concat(a11yLabel.mode === "additional" ? " " : "").concat(a11yLabel.label))
    );
  }
  return import_react8.default.createElement("ul", { className: getContainerClassName(), ref }, items.map(function(item) {
    var _a2, _b2;
    return item.gotoPage !== void 0 ? (
      // item = ClickableItem
      import_react8.default.createElement(
        "li",
        { key: item.key, className: "".concat(pageItemClassName).concat(item.active && activeItemClassName ? " " + activeItemClassName : ""), "aria-current": item.active && ariaCurrentAttr ? "page" : void 0 },
        import_react8.default.createElement("a", { className: pageLinkClassName, href: linkHref === "hash" ? "#" : void 0, onClick: preventDefault(function() {
          return handlePageChange(item.gotoPage);
        }), "aria-label": ((_a2 = item.a11yLabel) === null || _a2 === void 0 ? void 0 : _a2.mode) === "replace" ? item.a11yLabel.label : void 0 }, getLabel(item.label, item.a11yLabel))
      )
    ) : (
      // item = NonClickableItem
      import_react8.default.createElement(
        "li",
        { key: item.key, className: "".concat(pageItemClassName, " ").concat(disabledItemClassName), "aria-hidden": item.a11yHidden },
        import_react8.default.createElement("span", { className: pageLinkClassName, "aria-label": ((_b2 = item.a11yLabel) === null || _b2 === void 0 ? void 0 : _b2.mode) === "replace" ? item.a11yLabel.label : void 0 }, getLabel(item.label, item.a11yLabel))
      )
    );
  }));
}
BootstrapPagination.propTypes = {
  current: import_prop_types.default.number.isRequired,
  total: import_prop_types.default.number.isRequired,
  onPageChange: import_prop_types.default.func.isRequired,
  maxWidth: import_prop_types.default.number,
  narrowStrategy: import_prop_types.default.oneOfType([
    import_prop_types.default.oneOf(["dropEllipsis", "dropNav"]),
    import_prop_types.default.arrayOf(import_prop_types.default.oneOf(["dropEllipsis", "dropNav"]).isRequired)
  ]),
  className: import_prop_types.default.string,
  extraClassName: import_prop_types.default.string,
  pageItemClassName: import_prop_types.default.string,
  pageLinkClassName: import_prop_types.default.string,
  activeItemClassName: import_prop_types.default.string,
  disabledItemClassName: import_prop_types.default.string,
  disabledLinkClassName: import_prop_types.default.string,
  srOnlyClassName: import_prop_types.default.string,
  previousLabel: import_prop_types.default.string,
  nextLabel: import_prop_types.default.string,
  ariaPreviousLabel: import_prop_types.default.string,
  ariaNextLabel: import_prop_types.default.string,
  renderNav: import_prop_types.default.bool,
  a11yActiveLabel: import_prop_types.default.string,
  ariaCurrentAttr: import_prop_types.default.bool,
  linkHref: import_prop_types.default.oneOf(["hash", "omit"])
};
export {
  bootstrap4PaginationPreset,
  bootstrap5PaginationPreset,
  lib_default as default
};
/*! Bundled license information:

react-is/cjs/react-is.development.js:
  (** @license React v16.13.1
   * react-is.development.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)

object-assign/index.js:
  (*
  object-assign
  (c) Sindre Sorhus
  @license MIT
  *)
*/
//# sourceMappingURL=react-responsive-pagination.js.map
